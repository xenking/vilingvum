// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: invite_codes.sql

package database

import (
	"context"
	"database/sql"
	"time"
)

const activateInviteCode = `-- name: ActivateInviteCode :exec
UPDATE invite_codes
SET used_by = $2,
    used_at = now()
WHERE code = $1
`

type ActivateInviteCodeParams struct {
	Code   string        `db:"code" json:"code"`
	UsedBy sql.NullInt64 `db:"used_by" json:"used_by"`
}

func (q *Queries) ActivateInviteCode(ctx context.Context, arg *ActivateInviteCodeParams) error {
	_, err := q.db.Exec(ctx, activateInviteCode, arg.Code, arg.UsedBy)
	return err
}

const createInviteCode = `-- name: CreateInviteCode :exec
INSERT INTO invite_codes(code, created_by)
VALUES ($1, $2)
`

type CreateInviteCodeParams struct {
	Code      string        `db:"code" json:"code"`
	CreatedBy sql.NullInt64 `db:"created_by" json:"created_by"`
}

func (q *Queries) CreateInviteCode(ctx context.Context, arg *CreateInviteCodeParams) error {
	_, err := q.db.Exec(ctx, createInviteCode, arg.Code, arg.CreatedBy)
	return err
}

const getInviteCode = `-- name: GetInviteCode :one
SELECT used_at
FROM invite_codes
WHERE code = $1
`

func (q *Queries) GetInviteCode(ctx context.Context, code string) (*time.Time, error) {
	row := q.db.QueryRow(ctx, getInviteCode, code)
	var used_at *time.Time
	err := row.Scan(&used_at)
	return used_at, err
}
